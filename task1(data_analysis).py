# -*- coding: utf-8 -*-
"""Task1(data_analysis).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14zszEXw5yRA7k8QUVtEgQGqAyYwu6Jnl
"""

!pip install pyspark

from pyspark.sql import SparkSession

# Start Spark session
spark = SparkSession.builder.appName("InternshipBigData").getOrCreate()

# Reduce logs to show only errors
spark.sparkContext.setLogLevel("ERROR")

df_customers = spark.read.csv("customer_details.csv", header=True, inferSchema=True)
df_basket = spark.read.csv("basket_details.csv", header=True, inferSchema=True)
print("Customers Data:")
df_customers.show(5)

print("Basket Data:")
df_basket.show(5)

# Check columns in both datasets
print("Basket columns:", df_basket.columns)
print("Customer columns:", df_customers.columns)

df_combined = df_basket.join(df_customers, on="customer_id", how="inner")
df_combined.show(5)

from pyspark.sql.functions import sum as _sum
df_total_items = df_combined.groupBy("customer_id").agg(_sum("basket_count").alias("total_items"))
df_total_items.orderBy("total_items", ascending=False).show(10)

from pyspark.sql.functions import to_date, col, sum as _sum
df_combined = df_combined.withColumn("date", to_date(col("basket_date")))
df_daily = df_combined.groupBy("date").agg(
    _sum("basket_count").alias("total_items")
)
df_daily.orderBy("date").show(10)

import matplotlib.pyplot as plt

df_daily_pd = df_daily.toPandas()
plt.figure(figsize=(12,6))
plt.plot(df_daily_pd['date'], df_daily_pd['total_items'], marker='o')
plt.title("Daily Basket Trends")
plt.xlabel("Date")
plt.ylabel("Total Items Bought")
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

df_top_products = df_combined.groupBy("product_id").agg(_sum("basket_count").alias("total_sold"))
df_top_products.orderBy("total_sold", ascending=False).show(10)

from pyspark.sql.functions import when, col, sum as _sum

# Create age groups
df_combined = df_combined.withColumn(
    "age_group",
    when(col("customer_age") < 25, "<25")
    .when((col("customer_age") >= 25) & (col("customer_age") < 40), "25-39")
    .when((col("customer_age") >= 40) & (col("customer_age") < 60), "40-59")
    .otherwise("60+")
)

# Aggregate total items by age group
df_age_group = df_combined.groupBy("age_group").agg(_sum("basket_count").alias("total_items"))

# Show results
df_age_group.orderBy("total_items", ascending=False).show()

import matplotlib.pyplot as plt

df_age_group_pd = df_age_group.toPandas()

plt.figure(figsize=(8,5))
plt.bar(df_age_group_pd['age_group'], df_age_group_pd['total_items'], color='pink')
plt.title("Total Items Bought by Age Group")
plt.xlabel("Age Group")
plt.ylabel("Total Items")
plt.show()

df_gender = df_combined.groupBy("sex").agg(_sum("basket_count").alias("total_items"))
df_gender.show()

df_gender_pd = df_gender.toPandas()

plt.figure(figsize=(6,4))
plt.bar(df_gender_pd['sex'], df_gender_pd['total_items'], color='darkblue')
plt.title("Total Items Bought by Gender")
plt.xlabel("Gender")
plt.ylabel("Total Items")
plt.show()

df_top_products = df_combined.groupBy("product_id").agg(_sum("basket_count").alias("total_sold"))
df_top_products.orderBy("total_sold", ascending=False).show(10)

